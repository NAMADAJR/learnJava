import os

START_MARKER = "<!-- BEGIN AUTOGENERATED STRUCTURE -->"
END_MARKER = "<!-- END AUTOGENERATED STRUCTURE -->"

def generate_structure(root_dir=".", prefix=""):
    structure = ""
    for item in sorted(os.listdir(root_dir)):
        if item.startswith(".") or item == "update_readme_structure.py":
            continue
        path = os.path.join(root_dir, item)
        if os.path.isdir(path):
            structure += f"{prefix}├── {item}/\n"
            structure += generate_structure(path, prefix + "│   ")
        else:
            structure += f"{prefix}├── {item}\n"
    return structure

def update_readme():
    with open("README.md", "r", encoding="utf-8") as f:
        content = f.read()

    start = content.find(START_MARKER)
    end = content.find(END_MARKER)

    if start == -1 or end == -1 or start > end:
        print("Markers not found or out of order in README.md.")
        return

    start += len(START_MARKER)
    structure = "```text\n" + generate_structure(".") + "```\n"
    new_content = content[:start] + "\n" + structure + content[end:]

    if content != new_content:
        with open("README.md", "w", encoding="utf-8") as f:
            f.write(new_content)
        print("README.md updated.")
    else:
        print("No changes to README.md.")

if __name__ == "__main__":
    update_readme()